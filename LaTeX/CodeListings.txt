Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2020-02-04T14:11:57+01:00

====== CodeListings ======
Created Dienstag 04 Februar 2020

There exists (at least) two generally different methods to write source code in your [[LaTeX-documents:]]
* ''verbatim'' environment
* ''listings'' package (providing advanced formatting features)


===== The verbatim environment =====
* Simply output text in a monospaced font, keeping line breaks and white spaces.
{{{code: lang="latex" linenumbers="True"
\begin{verbatim}
Text enclosed inside \texttt{verbatim} environment is printed directly. 
All \LaTeX{} commands are ignored.
\end{verbatim} 
}}}


* To highlight white spaces, use ''\begin{verbatim*}''. 

* To write code inline, ''\verb'' can be used:
{{{code: lang="latex" linenumbers="True"
The home directory \verb|~/| contains a lot of hidden folders starting with a dot, show them with \verb|ls -a ~/|
}}}

	Note that any character, except letters and * can be used as delimiter (instead of ''|'' used here).


===== The listings package =====
* load in the preamble of the document
	''\usepackage{listings}''
	
* write code inline
{{{code: lang="latex" linenumbers="True"
\lstinline[<options>]<char><code><char> 
}}}

   where ''<char>''  can be any character that isn't open square bracket ''['' and that doesn't occur in ''<code>'' to delimit code

* using the ''lstlisting'' environment in its most basic form, line breaks and white space are all kept
{{{code: lang="latex" linenumbers="True"
\begin{lstlisting}
import numpy as np
import scipy as sp

print( "hi" )
\end{lstlisting} 
}}}


* specifying the coding language to enable basic syntax highlighting
{{{code: lang="latex" linenumbers="True"
\begin{lstlisting}[language=Python]
import numpy as np
import scipy as sp

print( "hi" )
\end{lstlisting} 
}}}


* importing source code directly from a file
{{{code: lang="latex" linenumbers="True"
\lstinputlisting[language=Octave, firstline=2, lastline=7]{some_octave_code.m} 
}}}

	if ''firstline'' and ''lastline'' are omitted, the full file is taken

* customize code styles
{{{code: lang="latex" linenumbers="True"
\documentclass{article}
\usepackage[utf8]{inputenc}
 
\usepackage{listings}
\usepackage{xcolor}
 
\definecolor{mycodegreen}{rgb}{0,0.6,0}
\definecolor{mycodegray}{rgb}{0.5,0.5,0.5}
\definecolor{mycodepurple}{rgb}{0.58,0,0.82}
\definecolor{mycodebackcolour}{rgb}{0.95,0.95,0.92}
 
\lstdefinestyle{mystyle}{
    backgroundcolor=\color{mycodebackcolour},	% choose background color
    basicstyle=\ttfamily\footnotesize,        	% font and size of fonts are used for the code
    commentstyle=\color{mycodegreen}\textit,	% comment style
    keywordstyle=\color{magenta}\bfseries,		% keyword style
    numberstyle=\tiny\color{mycodegray},		% style for line numbers
    stringstyle=\color{mycodepurple},			% string literal style
    breakatwhitespace=false,         			% sets if automatic breaks should only happen at whitespace
    breaklines=true,							% sets automatic line breaking                
    captionpos=b,                    			% sets caption-position to bottom
    frame=single,	                  			% adds a frame around code
    keepspaces=true,                 			% keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
    language=Python,							% language of code
    numbers=left,                    			% where to put line numbers (none, left, right) 
    numbersep=5pt,                  			% distance from line numbers to code
    rulecolor=\color{black},         			% if not set, frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
    showspaces=false,                			% show spaces adding particular underscores (overrides 'showstringspaces')
    showstringspaces=false,						% underline spaces within strings only
    showtabs=false,                  			% show tabs within strings adding particular underscore
    tabsize=4									% sets default tabsize to 4 spaces
    title=\lstname                   			% show filename of files included with \lstinputlisting; also try caption instead of title
}
 
\lstset{style=mystyle}							% enables the style 'mystyle', call it with another style to switch to another style
 
\begin{document}
Following code will be directly imported from a file
 
\lstinputlisting[language=Octave, caption=Octave example]{my_octave_code.m}
\end{document} 
}}}




