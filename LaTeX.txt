Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-08-05T06:39:14+02:00

====== LaTeX ======
Created Montag 05 August 2019

===== Some general tips =====
1. Some packages where one extends another
	''xcolor    > color''
	''graphicx  > graphics''
	''mathtools > amsmath''
2. Lengths
	''pt''      	1 pt is 1/72.27 inch
	''mm''      	millimeter (2.84 pt)
	''cm''      	centimeter
	''in''      	inch (72.27 pt)
	''ex''      	approx. height of letter "x" in current font
	''em''      	approx. width of "M" is current font
3. word count
	''$ detex file.tex | wc -w''
	 detex removes all LaTeX-commands
	 wc makes a wordcount (-w to count the words)
4. Correct way to bold/italicize text
	 ''\textbf{bla}'' or ''\bfseries{bla}''		**NOT** ''{\bf bla}''   ← old
	 ''\textit{bla}			''                    		**NOT** ''{\it bla}''   ← old
5. Colors
	''\usepackage{xcolor} --> \textcolor{<color>}{<text>}''
6. Spell check
	''$ aspell -t check file.tex''
7. Dots in filename when using \includegraphics
	''\includegraphics{path_to_file/{my.filename.with.dots}.png}''


===== Umlaute =====
* ''{\"a}'', ''{\"o}'' etc. is the safest option
	it should always work
* ''\usepackage[utf8]{inputenc}''
	in the document header allows to type umlaute directly
* ''\usepackage{fontspec}''
	if using XeLaTeX to compile


===== Date =====
* insert current date, where format is according to language settings
	''\today''
* change format of displayed date can be easily done via package ''datetime2''
	''\usepackage[yyyymmdd]{datetime}''
	''\renewcommand{\dateseparator}{--}''
	''\today''
* define your own command to display date is iso-standard
	''\def\myisodate{\leavevmode\hbox{\the\year-\twodigits\month-\twodigits\day}}''
	''\def\twodigits#1{\ifnum#1<10 0\fi\the#1}''
	''Today we have: \myisodate''


===== Quotationmarks =====
At least three different solutions exists:
* Type ''``text'''' to produce “text”, and type ''`text''' to produce ‘text’
* Using an Unicode editor, and either ''\usepackage[utf8]{inputenc}'' or ''XeTeX/LuaTeX, ''simply type ''“text”'' or ''‘text’'' in your code
* Using the ''csquotes'' package, type ''\enquote{text} (''also not all the options for e.g. foreign quotes)


===== Enumerations =====
Make an enumerate list start at any number:
{{{code: lang="latex" linenumbers="True"
\begin{enumerate}
  \setcounter{enumi}{4}
  \item fifth element
\end{enumerate}
}}}

Note that ''enumii'', ''enumiii'', and ''enumv'' are for 2nd, 3rd and 4th level of nested lists, respectively.

===== Basic drawing using TikZ =====
* ''\usepackage{tikz}''
* every TikZ diagram requires tikzpicture environment
	''\begin{tikzpicture}''
''      ...''
	''\end{tikzpicture}''


==== Basic shapes: ====
* straight line
	''\draw (0,0) -- (4,0);''
* square
	''\draw (0,0) -- (4,0) -- (4,4) -- (0,4) -- cycle;''
   square in a more direct way (starting point & opposite corner)
	''\draw (0,0) rectangle (4,4);''
* parabola
	''\draw (0,0) parabola (4,4);''
* curved line
	''\draw (0,0) .. controls (0,4) and (4,0) .. (4,4);''
* circle
	''\draw (2,2) circle (3cm);''
* ellipse
	''\draw (2,2) ellipse (3cm and 1cm);''
* arw
	''\draw (3,0) arc (0:75:3cm);''
   --> (<starting-angle>:<ending-angle>:<radius>)
* vary linestyle
	''\draw[red,thick,dashed] <one of the above commands>''
* grid
	''\draw[step=1cm,grey,very thin] (-2,-2) grid (6,6);''
   --> 1st point is bottom left, 2nd point top right corner
* colour filled box
	''\fill[blue!40!white] (0,0) rectangle (4,4);''
   --> colour is 40% blue mixed with 60% white
   colour filled box with border
	''\filldraw[fill=blue!40!white, draw=black] (0,0) rectangle (4,4);''
   colour-gradient filled box
	''\shade[left color=blue,right color=red] (0,0) rectangle (4,4);''
	''\shade[inner color=blue,outer color=red] (0,0) rectangle (4,4);''
* axes/arrows
	'''
	\draw[thick,->] (0,0) -- (4.5,0);
	\draw[thick,->] (0,0) -- (0,4.5);
	'''

   axes/arrows with labels
	'''
	\draw[thick,->] (0,0) -- (4.5,0) node[anchor=north west] {x axis};
	\draw[thick,->] (0,0) -- (0,4.5) node[anchor=south east] {y axis};
	'''

   axes/arrows with ticks and numbering
	''\foreach \x in {0,1,2,3,4}''
		''\draw (\x cm,1pt) -- (\x cm -1pt) node[anchor=north] {$\x$};''
	''\foreach \y in {0,1,2,3,4}''
		''\draw (\y cm,1 cm) -- (\y cm -1 cm) node[anchor=east] {$\y$};''
	--> 'for each' is a loop construct


===== References and footnotes when using the beamer style =====
1. To show footnotes from each column at the bottom of a slide, 2 methods exists
	a. use ''[frame]'' option
{{{code: lang="latex" linenumbers="True"
\documentclass{beamer}
\begin{document}
\begin{frame}
	\begin{columns}
		\column{.5\textwidth}
		text for 1st column and a footnote\footnote[frame]{footnote in 1st column}
		\column{.5\textwidth}
		text for 2nd column and a footnote\footnote[frame]{footnote in 2nd column}
		\end{columns}
\end{frame}
\end{document}
}}}


	b. use ''\footnotemark'' and ''footnotetext'' to explicitely set number
{{{code: lang="latex" linenumbers="True"
\documentclass{beamer}
\begin{document}
\begin{frame}
	\begin{columns}
		\column{.5\textwidth}
		text for 1st column and a footnote\footnotemark
		\column{.5\textwidth}
		text for 2nd column and a footnote\footnotemark
	\end{columns}
	\footnotetext[1]{footnote in 1st column}
	\footnotetext[2]{footnote in 2nd column}
\end{frame}
\end{document}
}}}
	
2. Use biblatex to show bibliography items at bottom
{{{code: lang="latex" linenumbers="True"
\documentclass{beamer}
\usepackage{biblatex}
\bibliography{foo}   % alternatively: \addbibresource{foo.bib}
\begin{document}
\begin{frame}
	Here is text\footfullcite{smith00}
\end{frame}
\end{document}
}}}

	 --> this will display full reference smith00 from foo.bib 
	 --> compile: ''pdflatex'', ''biber'', ''pdflatex'', ''pdflatex''

3. Show references at bottom and at bibliography at end
{{{code: lang="latex" linenumbers="True"
\documentclass{beamer}
\usepackage[style=verbose]{biblatex}
%\usepackage[style=verbose,backend=biber]{biblatex}
\addbibresource{foo.bib}
\begin{document}
\begin{frame}
	Text text \footcite{RePEc:cwl:cwldpp:159}
\end{frame}
\begin{frame}
	\printbibliography
\end{frame} 
\end{document}
}}}

	 --> compile: ''pdflatex'', ''biber'', ''pdflatex'', ''pdflatex''
