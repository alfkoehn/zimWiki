Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2019-08-05T06:39:14+02:00

====== LaTeX ======
Created Montag 05 August 2019

===== Some general tips =====
1. Some packages where one extends another
	''xcolor    > color''
	''graphicx  > graphics''
	''mathtools > amsmath''
2. Lengths
	''pt''      	1 pt is 1/72.27 inch
	''mm''      	millimeter (2.84 pt)
	''cm''      	centimeter
	''in''      	inch (72.27 pt)
	''ex''      	approx. height of letter "x" in current font
	''em''      	approx. width of "M" is current font
3. word count
	''$ detex file.tex | wc -w''
	 detex removes all LaTeX-commands
	 wc makes a wordcount (-w to count the words)
4. Correct way to bold/italicize text
	 ''\textbf{bla}'' or ''\bfseries{bla}''		**NOT** ''{\bf bla}''   ← old
	 ''\textit{bla}			''                    		**NOT** ''{\it bla}''   ← old
5. Colors
	''\usepackage{xcolor} --> \textcolor{<color>}{<text>}''
6. Spell check
	''$ aspell -t check file.tex''
7. Dots in filename when using \includegraphics
	''\includegraphics{path_to_file/{my.filename.with.dots}.png}''
8. the ''pdfcomment'' package might be useful in a few cases to insert comment-boxes


===== Umlaute =====
* ''{\"a}'', ''{\"o}'' etc. is the safest option
	it should always work
* ''\usepackage[utf8]{inputenc}''
	in the document header allows to type umlaute directly
* ''\usepackage{fontspec}''
	if using XeLaTeX to compile


===== Date =====
* insert current date, where format is according to language settings
	''\today''
* change format of displayed date can be easily done via package ''datetime2''
	''\usepackage[yyyymmdd]{datetime}''
	''\renewcommand{\dateseparator}{--}''
	''\today''
* define your own command to display date is iso-standard
	''\def\myisodate{\leavevmode\hbox{\the\year-\twodigits\month-\twodigits\day}}''
	''\def\twodigits#1{\ifnum#1<10 0\fi\the#1}''
	''Today we have: \myisodate''


===== Quotationmarks =====
At least three different solutions exists:
* Type ''``text'' to produce “text”, and type ''`text' to produce ‘text’
* Using an Unicode editor, and either ''\usepackage[utf8]{inputenc}'' or ''XeTeX/LuaTeX, ''simply type ''“text”'' or ''‘text’'' in your code
* Using the ''csquotes'' package, type ''\enquote{text} (''also not all the options for e.g. foreign quotes)


===== Enumerations =====
Make an enumerate list start at any number:
{{{code: lang="latex" linenumbers="True"
\begin{enumerate}
  \setcounter{enumi}{4}
  \item fifth element
\end{enumerate} 
}}}

Note that ''enumii'', ''enumiii'', and ''enumv'' are for 2nd, 3rd and 4th level of nested lists, respectively.


===== Linebreaks within table cells =====
The default ''tabular'' environment does not allow for linebreak within a cell. 
1. Add addtional rows to the table to mimick linebreaks
2. Use the ''tabularx'' package, where columns can get a fixed width and if cell entry is wider an automatic wrapping happens.
{{{code: lang="latex" linenumbers="True"
\documentclass{article}
\usepackage{tabularx}

\begin{document}

\begin{tabularx}{\textwidth}{|X|X|X|X|}
\hline
In this table & each column has the same & width & of textwidth/4 \\
\hline
  &  & the width is & too small for some of the cells  \\
\hline
\end{tabularx}

\end{document} 
}}}
	
3. Explicitly specify the column width using additional column types
	''p{width}''	vertically top-aligned cells width fixed width
	''m{width}''	vertically middle-aligned cells width fixed width
	''b{width}''	vertically bottom-aligned cells with fixed width
{{{code: lang="latex" linenumbers="True"
\documentclass{article}
\usepackage{blindtext}
\begin{document}
\begin{tabular}{p{0.1\textwidth}p{0.8\textwidth}}
\hline
First column & Second column\\
\hline
blub & \blindtext\\
blob & blib\\
\hline
\end{tabular}
\end{document} 
}}}
	

===== Chemical elements and formulas =====
1. Use the ''mhchem'' package for basic chemistry
{{{code: lang="latex" linenumbers="True"
\documentclass{article}
\usepackage[version=4]{mhchem}
\begin{document}
% simple formulas
\ce{Sb2O3}
\ce{2H20}
% isotopes
\ce{^{227}_{90}Th+}
% bonds
\ce{A \sbond B \dbond C \tbond D}
% reactions
\ce{C02 + C -> 2CO}
\ce{C02 + C ->[text above arrow][text below arrow] 2CO}
\end{document} 
}}}

2. Use ''chemfig'' from ''tikz'' to make chemical drawings
	''\chemfig{<Atom1><binding>[<angle>,<length-coefficient>,<n1>,<n2>,<tikz stuff>]<atom2>}''
	 for example
	''\chemfig{C-C-C-C}''
	''\chemfig{H_3C-{{(CH_2)}_2}-CH_3}''
	''\chemfig{H-C(-[2]H)(-[6]H)-C(-[2]H)(-[6]H)-C(-[2]H)(-[6]H)-C(-[2]H)(-[6]H)-H}''
		→ numbers in square brackets correspond to directions (angles), counted from 0 to 7, in units of 45 degrees


===== Include pdfs =====
1. Use the ''includegraphics'' command from the ''graphicx'' package
	'''
	\usepackage{graphicx}
	\begin{document}
	\includegraphics[page=7,scale=0.5]{some_file.pdf}      
	\end{document}
	'''

2. Use the ''pdfpages'' package
	a. All pages (and scaled)
		''\includepdf[pages=-,scale=0.5]{some_file.pdf}''
	b. All pages in reversed order
		''\includepdf[pages=last-1]{some_file.pdf}''
	c. Specific pages
		''\includepdf[pages={2-9,13}]{some_file.pdf}''
	d. Multiple pages on one side, 2 columns x 3 rows
		''\includepdf[pages=., nup=2x3]{some_file.pdf}''
	e. Set distance betwen pages
		''\includepdf[pages=., nup=2x3, delta=3mm 3mm]{some_file.pdf}''
	f. Make a frame around the pages
		''\includepdf[pages=., nup=2x3, delta=3mm 3mm, frame=true]{some_file.pdf}''


===== Checkmark symbols =====
1. Very nice looking symbols are from pifont
	'''
	\usepackage{pifont}% http://ctan.org/pkg/pifont
	\ding{51}% positive checkmark
	\ding{55}% negative checkmark (cross)
	'''



===== Basic drawing using TikZ =====
* ''\usepackage{tikz}''
* every TikZ diagram requires tikzpicture environment
	''\begin{tikzpicture}''
''      ...''
	''\end{tikzpicture}''


==== Basic shapes: ====
* straight line
	''\draw (0,0) -- (4,0);''
* square
	''\draw (0,0) -- (4,0) -- (4,4) -- (0,4) -- cycle;''
   square in a more direct way (starting point & opposite corner)
	''\draw (0,0) rectangle (4,4);''
* parabola
	''\draw (0,0) parabola (4,4);''
* curved line
	''\draw (0,0) .. controls (0,4) and (4,0) .. (4,4);''
* circle
	''\draw (2,2) circle (3cm);''
* ellipse
	''\draw (2,2) ellipse (3cm and 1cm);''
* arw
	''\draw (3,0) arc (0:75:3cm);''
   --> (<starting-angle>:<ending-angle>:<radius>)
* vary linestyle
	''\draw[red,thick,dashed] <one of the above commands>''
* grid
	''\draw[step=1cm,grey,very thin] (-2,-2) grid (6,6);''
   --> 1st point is bottom left, 2nd point top right corner
* colour filled box
	''\fill[blue!40!white] (0,0) rectangle (4,4);''
   --> colour is 40% blue mixed with 60% white
   colour filled box with border
	''\filldraw[fill=blue!40!white, draw=black] (0,0) rectangle (4,4);''
   colour-gradient filled box
	''\shade[left color=blue,right color=red] (0,0) rectangle (4,4);''
	''\shade[inner color=blue,outer color=red] (0,0) rectangle (4,4);''
* axes/arrows
	'''
	\draw[thick,->] (0,0) -- (4.5,0);
	\draw[thick,->] (0,0) -- (0,4.5);
	'''

   axes/arrows with labels
	'''
	\draw[thick,->] (0,0) -- (4.5,0) node[anchor=north west] {x axis};
	\draw[thick,->] (0,0) -- (0,4.5) node[anchor=south east] {y axis};
	'''

   axes/arrows with ticks and numbering
	''\foreach \x in {0,1,2,3,4}''
		''\draw (\x cm,1pt) -- (\x cm -1pt) node[anchor=north] {$\x$};''
	''\foreach \y in {0,1,2,3,4}''
		''\draw (\y cm,1 cm) -- (\y cm -1 cm) node[anchor=east] {$\y$};''
	--> 'for each' is a loop construct

