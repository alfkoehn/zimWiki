Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2019-07-02T06:26:57+02:00

====== linux ======
Created Dienstag 02 Juli 2019


===== Backup =====
1. using **rsync**
	''$ rsync --dry-run -avz --delete <user>@<server>:/some/folder/ local_folder/''
		copies all files and folder from ''<user>@<server>:/some/folder/'' (remote) to ''local_folder/'' (local)
		''-a''		archive mode = Recursive mode + Preserves symbolic links, permission, timestamp, owner and group
		''-z''		enable compression 
		''-v''		verbose (display info)
		''--delete	''if file does not exist at source but at target, delete it (propagate deletes)
		''--dry-run''	make a test run (to check if you will ''accidentally'' delete files)
	''$ rsync -avrz -e ssh <user>@<server>:/some/folder/ local_folder/''
		''-r		''recursively (including subfolders)
	''$ rsync -e ssh -r localeDir <user>@<server>:~/remoteDir''
		synchronizes a local directory (''localeDir'') to a remote directory (''remoteDir'') with
	''$ rsync -avrzP -e ssh --exclude '*.mp4' --exclude '*.gz' <user>@<server>:remoteDir/ localDir/''
		''--exclude''	exclude files or folders
		''-P''		show progess during transfer
2. **unison**


===== Mount iso file =====
1. Create a directory to be used as mounting point
	''$ sudo mkdir /media/iso''
2. Mount iso file
	''$ sudo mount -o loop path/to/iso/file/ISO_FILE.ISO /media/iso''
5. Unmount iso file
	''$ sudo umount /media/iso''


===== Freeing disk space =====
1. Deleting thumbnails
	''$ rm ~/.cache/thumbnails/''
2. Deleting old files in ''~/.cache''
	$ ''find ~/.cache/ -depth -type f -atime +365''			list everything which hasn't been accessed for a year 
	$ ''find ~/.cache/ -type f -atime +365 -delete''			delete everything which hasn't been accessed for a year

	 Alternatively
	''$ find /path/to/ -type f -mtime +7 -name '*.gz' -execdir rm -- '{}' \;''
		
		''find''		the unix command for finding files/directories/links and etc.
		''/path/to/''	the directory to start your search in.
		''-type f''		only find files.
		''-name '*.gz'''	list files that ends with .gz.
		''-mtime +7''	only consider the ones with modification time older than 7 days.
		''-execdir ... \;''	for each such result found, do the following command in ....
		''rm -- '{}'''	remove the file; the {} part is where the find result gets substituted into from the previous part. 
						  ''--'' means end of command parameters avoid prompting error for those files starting with hyphen.
						
	Alternatively
	  ''$ find /path/to/ -type f -mtime +7 -name '*.gz' -print0 | xargs -r0 rm ''—
	
	Alternatively and slightly faster (still slightly slower than ''find -delete'')
	  $ ''find /path/to/ -type f -mtime +7 -name '*.gz' -execdir rm -- '{}' +''


===== Undelete or recover files =====
1. use ''photorec'' (from command-line)
2. other method
   a) find the mount point
	  remove sd-card/mmc/whatever from PC
	  ''$ ls -1 /dev > before.txt''
	  connect it
	  ''$ ls -1 /dev > after.txt''
	  find the difference: ''$ diff before.txt after.txt''
   b) make a backup image
	  ''$ sudo dd if=/dev/sdb of=backup_image_file''
   c) recover jpgs
	  ''$ foremost jpg -o /tmp/bilder -i backup_image_file''
	  recover everything
	  ''$ foremost -o /tmp/daten -i backup_image_file''


===== Safely delete a harddrive =====
1. use shred to overwrite everything on disk (can take a while)
	''$ shred -vfz -n 2 /dev/sdb1''
		''-v''		show progress
		''-f''		change permission if necessary (to ensure write permission everywhere)
		''-z''		do a last overwrite with 0 to hide overwrite procedure
		''-n 2''		number of times everything should be overwritten


===== Zip and unzip files =====
1. **tar** and **gzip**
	''$ tar cfvz my_archive.tar.gz <folder1> <file1>''
		pack and zip files/folders
	''$ tar xfvz my_archive.tar.gz''
		extract
2. **tar** and **bzip2**
	''$ tar cfvj my_archive.tar.bz2 <folder1> <file1>''
		pack and zip
	''$ tar xfvj my_archive.tar.bz2''
		extract
3. using **7z**
	''$ 7z a -mx=9 archive.7z *''
		create archive


===== Use sshfs =====
1. if not installed: 
	''$ apt-get install fuse-utils sshfs''
2. add user (that wanted to use fuse) to group fuse
	-> check with "groups" if group fuse exists (?)
	''sudo usermod -a USERNAME -G fuse''
	(new login required)
3. connect
	''$ sshfs USERNAME@111.111.1.1:/home/USERNAME ~/srv/''
	local mount point: ~/srv/
	USERNAME = user@server
	if error is "fusermount: user has no write access to mountpoint"
	 => ''$ sudo chown USERNAME MOUNTPOINT-FOLDER''
4. problems => use "''-d''" as parameter
5. end connection:
	''$ fusermount -u ~/srv/''


===== File count =====
''$ find folder -type f | wc -l''
	first, all files (''-type f'' ==> files) are listed, then number of output lines are counted with wc
''$ find folder -type d | wc -l''
	count subfolder


===== Fast resizing of current window =====
''<alt> + <right-click> + <drag>''


===== Get system infos in shell =====
1. ''lspci''
2. ''sudo dmidecode --type 2   //for motherboard''
	''sudo dmidecode --type 17  //for RAM''
3. ''lshw''


===== Set shell variable using export =====
1. making local shell variable global, i.e. from now on it is known in this shell
	''$ export VAR=value''
	
	''$ export EDITOR=/usr/bin/vim''
	setting a new EDITOR variable:
2. to make this a permanent export write into ''~/.bash_profile'' or ''~/.profile'' or ''/etc/profile''
3. see a list of all exported variables and functions
	''$ export -p''


===== Download files from website =====
''$ wget -A py -m -p -E -k -K -np www.greenteapress.com/thinkpython/code/''
	mirror website but remove all files except those with .py extension
	to remove directory architecture: ''-np''
	attention: ''--accept (-A)'' is case sensitive, therefore: ''-A py,PY''


===== Repair grub2 using a live-version =====
1. boot from live-{CD,USB}
2. launch GParted to check which partition is the linux partion
	 usually, it is an EXT4 partition
3. mount it, e.g.:
	''$ sudo mount /dev/sda6 /mnt''
4. bind the directories grub needs to detect other OS
	''$ sudo mount --bind /dev /mnt/dev''
	''$ sudo mount --bind /dev/pts /mnt/dev/pts''
	''$ sudo mount --bind /proc /mnt/proc''
	''$ sudo mount --bind /sys /mnt/sys''
5. change into them using chroot
	''$ sudo chroot /mnt''
6. install grub
	''$ grub-install /dev/sda''
	if error occur, try
	''grub-install --recheck /dev/sda''
7. update grub
	''$ update-grub''
8. exit chrooted system
	''$ exit'' 
	''$ sudo umount /mnt/sys'' 
	''$ sudo umount /mnt/proc'' 
	''$ sudo umount /mnt/dev/pts'' 
	''$ sudo umount /mnt/dev''
	''$ sudo umount /mnt''


===== Creating a bootable pendrive with linux =====
1. ''$ sudo apt-get install usb-creator-gtk''
   don't forget to download the .iso file
2. ''$ sudo apt-get install unetbootin''
   ppa:gezakovacs/ppa  


===== TI Texas Instruments Calculator emulator =====
1. Install the software
	''$ sudo apt-get install tilem''
2. Tool for download ROM from your TI
	''$ sudo apt-get install tilp2''
3. Start the emulator 
	''$ tilem''
4. Another emulator TiEmu
	''$ sudo apt-get install tiemu''


===== VMware player high mount.ntfs usage (100%) =====
provide a non-ntfs location for vmware snapshot and suspend files
vmware options --> general --> Working directory: ''/opt/vmware'' or ''/var/vmware''


===== Manually install fonts (Ubuntu 16.04) =====
1. font files are installed in ''/usr/lib/share/fonts'' or ''/usr/share/fonts''
	 create a sub-folder in font directory
	''$ sudo mkdir /usr/share/fonts/my_font'' 
2. move downloaded files into that folder
	''$ sudo mv ~/Downloads/*.ttc ~/Downloads/*.ttf /usr/share/fonts/my_font/''
3. set correct permission to these files
	''$ sudo chmod 644 /usr/share/fonts/my_font/* -R''
	''$ sudo chmod 755 /usr/share/fonts/my_font''
4. build font information cache
	''$ sudo fc-cache -fv''
Alternatively:
1. double-click on ttf-font
   click "Install"


===== Compress scanned pdf file =====
	''$ gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf''
		 ''-dPDFSETTINGS=/screen''	72 dpi (lower qualitiy, smaller size)
		''-dPDFSETTINGS=/ebook''	150 dpi (slightly lower qualitiy, larger size)
		''-dPDFSETTINGS=/prepress''	300 dpi (similar to Acrobat distiller "Prepress Optimized" setting)
		''-dPDFSETTINGS=/printer''	300 dpi (similar to Acrobat distiller "Printer Optimized" setting)


===== Reset mouse touchpad when crashed after suspend =====
1. Identify kernel modul controlling touchpad
	''$ lsmod | grep touch''
	→ called ''hid_multitouch'' in my case
2. Reset kernel modul
	''$ sudo rmmod hid_multitouch''
	''$ sudo modprobe hid_multitouch''


===== Repair not-charging battery =====
1. Shut down notebook
2. Unplug the charger
3. Press power button for 10 seconds
4. Boot-up
5. Plug charger back in


===== Dual monitors with one wallpaper spanning across both monitors =====

=== XFCE: ===
1. Open //XFCE Settings Editor// from Application Menu → Settings → Setting Editor
2. Navigate to ''xfce-desktop'' on left pane
3. Create new property with following settings
	* Name: [[/backdrop/screen0/xinerama-stretch]]
	* Type: BOOL
	* Value: TRUE|1|Enables

